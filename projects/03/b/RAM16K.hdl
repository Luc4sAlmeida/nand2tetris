// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address[0..2], a=toA, b=toB, c=toC, d=toD, e=toE, f=toF, g=toG, h=toH);
        
        RAM4K(in=in, load=toA, address=address[2..13], out=outA);
        RAM4K(in=in, load=toB, address=address[2..13], out=outB);
        RAM4K(in=in, load=toC, address=address[2..13], out=outC);
        RAM4K(in=in, load=toD, address=address[2..13], out=outD);
        RAM4K(in=in, load=toE, address=address[2..13], out=outE);
        RAM4K(in=in, load=toF, address=address[2..13], out=outF);
        RAM4K(in=in, load=toG, address=address[2..13], out=outG);
        RAM4K(in=in, load=toH, address=address[2..13], out=outH);

        Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[0..2], out=out);
}